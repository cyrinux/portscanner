// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0-devel
// 	protoc        v3.15.2
// source: scanner/scanner.proto

package scanner

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Scanner struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hosts    string `protobuf:"bytes,1,opt,name=hosts,proto3" json:"hosts,omitempty"`
	Ports    string `protobuf:"bytes,2,opt,name=ports,proto3" json:"ports,omitempty"`
	Protocol string `protobuf:"bytes,3,opt,name=protocol,proto3" json:"protocol,omitempty"`
}

func (x *Scanner) Reset() {
	*x = Scanner{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scanner_scanner_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Scanner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Scanner) ProtoMessage() {}

func (x *Scanner) ProtoReflect() protoreflect.Message {
	mi := &file_scanner_scanner_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Scanner.ProtoReflect.Descriptor instead.
func (*Scanner) Descriptor() ([]byte, []int) {
	return file_scanner_scanner_proto_rawDescGZIP(), []int{0}
}

func (x *Scanner) GetHosts() string {
	if x != nil {
		return x.Hosts
	}
	return ""
}

func (x *Scanner) GetPorts() string {
	if x != nil {
		return x.Ports
	}
	return ""
}

func (x *Scanner) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

type Port struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host        string `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Id          string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Protocol    string `protobuf:"bytes,3,opt,name=protocol,proto3" json:"protocol,omitempty"`
	State       string `protobuf:"bytes,4,opt,name=state,proto3" json:"state,omitempty"`
	ServiceName string `protobuf:"bytes,5,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
}

func (x *Port) Reset() {
	*x = Port{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scanner_scanner_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Port) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Port) ProtoMessage() {}

func (x *Port) ProtoReflect() protoreflect.Message {
	mi := &file_scanner_scanner_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Port.ProtoReflect.Descriptor instead.
func (*Port) Descriptor() ([]byte, []int) {
	return file_scanner_scanner_proto_rawDescGZIP(), []int{1}
}

func (x *Port) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *Port) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Port) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *Port) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *Port) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

type ReturnAllPorts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Port []*Port `protobuf:"bytes,1,rep,name=port,proto3" json:"port,omitempty"`
}

func (x *ReturnAllPorts) Reset() {
	*x = ReturnAllPorts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scanner_scanner_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReturnAllPorts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReturnAllPorts) ProtoMessage() {}

func (x *ReturnAllPorts) ProtoReflect() protoreflect.Message {
	mi := &file_scanner_scanner_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReturnAllPorts.ProtoReflect.Descriptor instead.
func (*ReturnAllPorts) Descriptor() ([]byte, []int) {
	return file_scanner_scanner_proto_rawDescGZIP(), []int{2}
}

func (x *ReturnAllPorts) GetPort() []*Port {
	if x != nil {
		return x.Port
	}
	return nil
}

var File_scanner_scanner_proto protoreflect.FileDescriptor

var file_scanner_scanner_proto_rawDesc = []byte{
	0x0a, 0x15, 0x73, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x2f, 0x73, 0x63, 0x61, 0x6e, 0x6e, 0x65,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x73, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72,
	0x22, 0x51, 0x0a, 0x07, 0x53, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x68,
	0x6f, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x68, 0x6f, 0x73, 0x74,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x22, 0x7f, 0x0a, 0x04, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x68,
	0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x22, 0x33, 0x0a, 0x0e, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x41, 0x6c,
	0x6c, 0x50, 0x6f, 0x72, 0x74, 0x73, 0x12, 0x21, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x50,
	0x6f, 0x72, 0x74, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x32, 0x43, 0x0a, 0x0e, 0x53, 0x63, 0x61,
	0x6e, 0x6e, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x31, 0x0a, 0x04, 0x53,
	0x63, 0x61, 0x6e, 0x12, 0x10, 0x2e, 0x73, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x53, 0x63,
	0x61, 0x6e, 0x6e, 0x65, 0x72, 0x1a, 0x17, 0x2e, 0x73, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x2e,
	0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x41, 0x6c, 0x6c, 0x50, 0x6f, 0x72, 0x74, 0x73, 0x42, 0x0a,
	0x5a, 0x08, 0x2f, 0x73, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_scanner_scanner_proto_rawDescOnce sync.Once
	file_scanner_scanner_proto_rawDescData = file_scanner_scanner_proto_rawDesc
)

func file_scanner_scanner_proto_rawDescGZIP() []byte {
	file_scanner_scanner_proto_rawDescOnce.Do(func() {
		file_scanner_scanner_proto_rawDescData = protoimpl.X.CompressGZIP(file_scanner_scanner_proto_rawDescData)
	})
	return file_scanner_scanner_proto_rawDescData
}

var file_scanner_scanner_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_scanner_scanner_proto_goTypes = []interface{}{
	(*Scanner)(nil),        // 0: scanner.Scanner
	(*Port)(nil),           // 1: scanner.Port
	(*ReturnAllPorts)(nil), // 2: scanner.ReturnAllPorts
}
var file_scanner_scanner_proto_depIdxs = []int32{
	1, // 0: scanner.ReturnAllPorts.port:type_name -> scanner.Port
	0, // 1: scanner.ScannerService.Scan:input_type -> scanner.Scanner
	2, // 2: scanner.ScannerService.Scan:output_type -> scanner.ReturnAllPorts
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_scanner_scanner_proto_init() }
func file_scanner_scanner_proto_init() {
	if File_scanner_scanner_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_scanner_scanner_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Scanner); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scanner_scanner_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Port); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scanner_scanner_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReturnAllPorts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_scanner_scanner_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_scanner_scanner_proto_goTypes,
		DependencyIndexes: file_scanner_scanner_proto_depIdxs,
		MessageInfos:      file_scanner_scanner_proto_msgTypes,
	}.Build()
	File_scanner_scanner_proto = out.File
	file_scanner_scanner_proto_rawDesc = nil
	file_scanner_scanner_proto_goTypes = nil
	file_scanner_scanner_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ScannerServiceClient is the client API for ScannerService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ScannerServiceClient interface {
	// Create new scanner
	Scan(ctx context.Context, in *Scanner, opts ...grpc.CallOption) (*ReturnAllPorts, error)
}

type scannerServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewScannerServiceClient(cc grpc.ClientConnInterface) ScannerServiceClient {
	return &scannerServiceClient{cc}
}

func (c *scannerServiceClient) Scan(ctx context.Context, in *Scanner, opts ...grpc.CallOption) (*ReturnAllPorts, error) {
	out := new(ReturnAllPorts)
	err := c.cc.Invoke(ctx, "/scanner.ScannerService/Scan", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ScannerServiceServer is the server API for ScannerService service.
type ScannerServiceServer interface {
	// Create new scanner
	Scan(context.Context, *Scanner) (*ReturnAllPorts, error)
}

// UnimplementedScannerServiceServer can be embedded to have forward compatible implementations.
type UnimplementedScannerServiceServer struct {
}

func (*UnimplementedScannerServiceServer) Scan(context.Context, *Scanner) (*ReturnAllPorts, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Scan not implemented")
}

func RegisterScannerServiceServer(s *grpc.Server, srv ScannerServiceServer) {
	s.RegisterService(&_ScannerService_serviceDesc, srv)
}

func _ScannerService_Scan_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Scanner)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ScannerServiceServer).Scan(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/scanner.ScannerService/Scan",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ScannerServiceServer).Scan(ctx, req.(*Scanner))
	}
	return interceptor(ctx, in, info, handler)
}

var _ScannerService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "scanner.ScannerService",
	HandlerType: (*ScannerServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Scan",
			Handler:    _ScannerService_Scan_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "scanner/scanner.proto",
}
