syntax = "proto3";
package scanner;

option go_package = "/scanner";

message Scanner {
    string hosts = 1;
    string ports = 2;
    bool with_aggressive_scan = 3;
    bool with_syn_scan = 4;
    bool with_null_scan = 5;
    bool service_version_detection = 6;
    bool service_os_detection = 7;
    bool service_default_scripts = 8;
    int32 timeout = 9;
}

message Task {
    string id = 1;
}

message Host {
    string address = 1;
    optional string os_version = 2;
}

message PortVersion {
   optional string low_version = 1;
   optional string high_version = 2;
   optional string extra_infos = 3;
   optional string product = 4;
}

message Port {
    string port_id = 1;
    string protocol = 2;
    string state = 3;
    string service_name = 4;
    PortVersion version = 5;
}

message HostResult {
    Host host = 1;
    repeated Port ports = 2;
}

message ScanResults {
    repeated HostResult host_result = 1;
}

// Service to manage list of scanners
service ScannerService {
    // Create new scanner
    rpc Scan(Scanner) returns (ScanResults);
    // Fetch a previous scan result
    rpc GetScan(Task) returns (ScanResults);
}
