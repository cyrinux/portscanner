version: "3.7"

networks:
  backend:
    external:
      name: my-network

volumes:
  redis_data:
    driver: local

services:
  client:
    image: namely/grpc-cli
    environment:
      - TZ=Europe/Paris
    networks:
      - backend
    depends_on:
      - server
    command: "ls redis:9000 proto.ScannerService"

  server:
    hostname: server
    build:
      context: .
      dockerfile: docker/server.Dockerfile
    image: grpcscanner:server
    environment:
      - TZ=Europe/Paris
      - DB_DRIVER=redis
      - DB_SERVER=redis:6379
      - RMQ_DB_SERVER=redis:6379
      - RMQ_DB_NAME=scanner
    cap_add:
      - NET_ADMIN
    restart: always
    depends_on:
      - redis
    ports:
      - "127.0.0.1:9000:9000"
    networks:
      - backend

  worker:
    build:
      context: .
      dockerfile: docker/worker.Dockerfile
    image: grpcscanner:worker
    environment:
      - TZ="Europe/Paris"
      - DB_DRIVER=redis
      - DB_SERVER=redis:6379
      - RMQ_DB_SERVER=redis:6379
      - RMQ_DB_NAME=scanner
      - RMQ_CONSUMERS=1
    restart: always
    cap_add:
      - NET_ADMIN
    depends_on:
      - redis
    networks:
      - backend

  redis:
    image: "bitnami/redis:latest"
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    restart: always
    volumes:
      - "redis_data:/bitnami/redis/data"
    networks:
      - backend
