version: "3.7"

networks:
  backend:
    name: my-network
    enable_ipv6: false

volumes:
  redis_data:
    driver: local
  prometheus_data:
    driver: local

services:
  server1:
    hostname: server1
    build:
      context: .
      dockerfile: Dockerfile
    image: grpcscanner
    env_file:
      - .env
    command: "-server -prometheus"
    cap_add:
      - NET_ADMIN
    restart: always
    depends_on:
      - redis-sentinel
    ports:
      - "9000"
      - "9001"
      - "127.0.0.1:6060:6060"
      - "127.0.0.1:2112:2112"
    volumes:
      - "./cert:/etc/scanner/cert:ro"
    networks:
      - backend

  server2:
    hostname: server2
    build:
      context: .
      dockerfile: Dockerfile
    image: grpcscanner
    env_file:
      - .env
    command: "-server -prometheus"
    cap_add:
      - NET_ADMIN
    restart: always
    depends_on:
      - redis-sentinel
    ports:
      - "9000/tcp"
      - "9001/tcp"
      - "127.0.0.1:6061:6060/tcp"
      - "127.0.0.1:2113:2112/tcp"
    volumes:
      - "./cert:/etc/scanner/cert:ro"
    networks:
      - backend

  worker:
    build:
      context: .
      dockerfile: Dockerfile
    image: grpcscanner
    env_file:
      - .env
    command: "-worker"
    restart: always
    cap_add:
      - NET_ADMIN
    depends_on:
      - redis-sentinel
      - tor
    networks:
      - backend
    ports:
      - "16060-16063:6060/tcp"
    volumes:
      - "./cert:/etc/scanner/cert:ro"
    deploy:
      mode: replicated
      replicas: 3

  tor:
    image: dperson/torproxy
    restart: always
    networks:
      - backend

  redis-primary:
    image: docker.io/bitnami/redis:6.2
    ports:
      - "6379/tcp"
    env_file:
      - .env
    environment:
      - REDIS_REPLICATION_MODE=master
      - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL
    volumes:
      - "redis_data:/bitnami/redis/data"
    restart: always
    networks:
      - backend

  redis-secondary:
    image: docker.io/bitnami/redis:6.2
    ports:
      - "6379/tcp"
    depends_on:
      - redis-primary
    env_file:
      - .env
    environment:
      - REDIS_REPLICATION_MODE=slave
      - REDIS_MASTER_HOST=redis-primary
      - REDIS_MASTER_PORT_NUMBER=6379
      - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL
    restart: always
    networks:
      - backend
    deploy:
      mode: replicated
      replicas: 5

  redis-sentinel:
    image: "bitnami/redis-sentinel:6.2"
    env_file:
      - .env
    environment:
      - REDIS_MASTER_HOST=redis-primary
    ports:
      - "26379-26381:26379/tcp"
    depends_on:
      - redis-primary
      - redis-secondary
    restart: always
    networks:
      - backend
    deploy:
      mode: replicated
      replicas: 3

  prometheus:
    image: prom/prometheus:v2.26.0
    env_file:
      - .env
    restart: always
    volumes:
      - ./config/prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
    ports:
      - "127.0.0.1:9090:9090/tcp"
    networks:
      - backend

  nginx:
    image: nginx:latest
    volumes:
      - "./nginx/nginx.conf:/etc/nginx/nginx.conf:ro"
      - "./nginx/conf.d:/etc/nginx/conf.d:ro"
      - "./cert:/etc/nginx/cert:ro"
    restart: always
    depends_on:
      - server1
      - server2
    ports:
      - "127.0.0.1:8080:8080/tcp"
    networks:
      - backend
